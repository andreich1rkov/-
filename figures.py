class Фигура:
    def __init__(self):
        pass

    def вывести(self):
        pass

    def рассчитать_периметр(self):
        pass

    def рассчитать_площадь(self):
        pass

class Треугольник(Фигура):
    def __init__(self, точка1, точка2, точка3):
        self.точка1 = точка1
        self.точка2 = точка2
        self.точка3 = точка3

    def вывести(self):
        # Реализация вывода для треугольника
        pass

    def рассчитать_периметр(self):
        # Реализация расчета периметра треугольника
        pass

    def рассчитать_площадь(self):
        # Реализация расчета площади треугольника
        pass

class Круг(Фигура):
    def __init__(self, центр, радиус):
        self.центр = центр
        self.радиус = радиус

    def вывести(self):
        # Реализация вывода для круга
        pass

    def рассчитать_периметр(self):
        # Реализация расчета периметра круга
        pass

    def рассчитать_площадь(self):
        # Реализация расчета площади круга
        pass

class Четырехугольник(Фигура):
    def __init__(self, точка1, точка2, точка3, точка4):
        self.точка1 = точка1
        self.точка2 = точка2
        self.точка3 = точка3
        self.точка4 = точка4

    def вывести(self):
        # Реализация вывода для четырехугольника
        pass

    def рассчитать_периметр(self):
        # Реализация расчета периметра четырехугольника
        pass

    def рассчитать_площадь(self):
        # Реализация расчета площади четырехугольника
        pass

class Точка:
    def __init__(self, x, y):
        self.x = x
        self.y = y

class Треугольник(Фигура):
    def __init__(self, точка1, точка2, точка3):
        self.точка1 = точка1
        self.точка2 = точка2
        self.точка3 = точка3

    def вывести(self):
        # Реализация вывода для треугольника
        pass

    def рассчитать_периметр(self):
        # Реализация расчета периметра треугольника
        pass

    def рассчитать_площадь(self):
        # Реализация расчета площади треугольника
        pass

class Круг(Фигура):
    def __init__(self, центр, радиус):
        self.центр = центр
        self.радиус = радиус

    def вывести(self):
        # Реализация вывода для круга
        pass

    def рассчитать_периметр(self):
        # Реализация расчета периметра круга
        pass

    def рассчитать_площадь(self):
        # Реализация расчета площади круга
        pass

class Четырехугольник(Фигура):
    def __init__(self, точка1, точка2, точка3, точка4):
        self.точка1 = точка1
        self.точка2 = точка2
        self.точка3 = точка3
        self.точка4 = точка4

    def вывести(self):
        # Реализация вывода для четырехугольника
        pass

    def рассчитать_периметр(self):
        # Реализация расчета периметра четырехугольника
        pass

    def рассчитать_площадь(self):
        # Реализация расчета площади четырехугольника
        pass

from abc import ABC, abstractmethod

class Фигура(ABC):
    @abstractmethod
    def вывести(self):
        pass

    @abstractmethod
    def рассчитать_периметр(self):
        pass

    @abstractmethod
    def рассчитать_площадь(self):
        pass

# Спросим у пользователя, сколько фигур он хочет создать
количество_фигур = int(input("Сколько фигур вы хотите создать? "))

# Создадим пустой список для хранения фигур
список_фигур = []

# Создадим фигуры и добавим их в список
for i in range(количество_фигур):
    print(f"Фигура {i + 1}:")
    тип_фигуры = input("Введите тип фигуры (Треугольник, Круг, Четырехугольник): ")

    if тип_фигуры == "Треугольник":
        # Здесь введите данные для треугольника, создайте объект треугольника и добавьте его в список
        pass
    elif тип_фигуры == "Круг":
        # Здесь введите данные для круга, создайте объект круга и добавьте его в список
        pass
    elif тип_фигуры == "Четырехугольник":
        # Здесь введите данные для четырехугольника, создайте объект четырехугольника и добавьте его в список
        pass
    else:
        print("Неверный тип фигуры. Пожалуйста, выберите Треугольник, Круг или Четырехугольник.")

# Рассчитаем площадь для каждой фигуры и добавим ее в список
for фигура in список_фигур:
    площадь = фигура.рассчитать_площадь()
    фигура.площадь = площадь

# Выведем список фигур вместе с их площадью
for фигура in список_фигур:
    print(f"{фигура.__class__.__name__}: Площадь - {фигура.площадь}")



# Отсортируем фигуры по площади
отсортированные_фигуры = sorted(список_фигур, key=lambda фигура: фигура.площадь)

# Выведем отсортированные фигуры
for фигура in отсортированные_фигуры:
    print(f"{фигура.__class__.__name__}: Площадь - {фигура.площадь}")

